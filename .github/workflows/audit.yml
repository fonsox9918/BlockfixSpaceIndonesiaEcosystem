name: Blockfix Audit
on: [push, pull_request, workflow_dispatch]

jobs:
  backend_platform_node:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: backend-platform } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm', cache-dependency-path: 'backend-platform/package-lock.json' }
      - run: npm ci
      - run: npm run build || echo "no build"
      - run: npx eslint . --ext .js,.jsx,.ts,.tsx || true
      - run: npm audit --audit-level=high || true
      - run: |
          npm i -D express-list-endpoints
          node -e "const list=require('express-list-endpoints');const app=require('./app');console.log(JSON.stringify(list(app),null,2));" > ../node-endpoints.json || true
      - uses: actions/upload-artifact@v4
        with: { name: node-endpoints, path: node-endpoints.json, if-no-files-found: ignore }

  backend_ai_python:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: backend-ai } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: python -m venv .venv && source .venv/bin/activate && pip install -r requirements.txt || true
      - run: source .venv/bin/activate && pip install ruff bandit pip-audit || true
      - run: source .venv/bin/activate && ruff . --output-format=github || true
      - run: source .venv/bin/activate && bandit -r . || true
      - run: source .venv/bin/activate && pip-audit || true

  frontend_vite:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: frontend } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm', cache-dependency-path: 'frontend/package-lock.json' }
      - run: npm ci
      - run: npm run build
      - run: npx eslint . --ext .jsx,.js,.ts,.tsx || true
      - run: npm audit --audit-level=high || true

  meta_repo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Gitleaks (secret scan)
        uses: gitleaks/gitleaks-action@v2
        with: { args: "detect --source . --no-git -v --redact" }
        continue-on-error: true
